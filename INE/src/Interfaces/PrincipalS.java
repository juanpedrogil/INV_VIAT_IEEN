/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Clases.Conexion;
import javax.swing.JOptionPane;

import Clases.ManagerSoViaticos;
import Clases.CrearPDF;

import Formularios.addSolicitudViaticos;
import Formularios.visSolicitudViaticos;
import static Interfaces.Principal.Username;
import static Interfaces.Principal.tablaInventario;
import static Interfaces.Principal.tablaUsuarios;
import com.itextpdf.text.DocumentException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class PrincipalS extends javax.swing.JFrame {
    Conexion cbd=new Conexion();
    Connection cn=cbd.getConexion();
    ManagerSoViaticos manager_soviaticos;
    visSolicitudViaticos s;
    DefaultTableModel modelo;
    CrearPDF pdf =new CrearPDF();
    boolean limpiar=false;
    /**
     * Creates new form PrincipalS
     */
    public PrincipalS() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        setLocationRelativeTo(null);
        //tablasolic.setModel(manager_soviaticos.getTasol()); 
        tablasolic.getTableHeader().setReorderingAllowed(false);
        tablon.getTableHeader().setReorderingAllowed(false);
        manager_soviaticos = new ManagerSoViaticos();
        
    }
    
    int i, c,folio;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel17 = new javax.swing.JPanel();
        btnAddInventario2 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        MenuSolicitudViaticos = new javax.swing.JPopupMenu();
        Impri_Sol = new javax.swing.JMenuItem();
        MenuTablonP = new javax.swing.JPopupMenu();
        ConsultarP = new javax.swing.JMenuItem();
        AceptarP = new javax.swing.JMenuItem();
        CancelarP = new javax.swing.JMenuItem();
        MenuTablonA = new javax.swing.JPopupMenu();
        ConsultarA = new javax.swing.JMenuItem();
        OficioComision = new javax.swing.JMenuItem();
        OficioViatico = new javax.swing.JMenuItem();
        AsignarMonto = new javax.swing.JMenuItem();
        CancelarA = new javax.swing.JMenuItem();
        MenuTablonC = new javax.swing.JPopupMenu();
        ConsultarC = new javax.swing.JMenuItem();
        AceptarC = new javax.swing.JMenuItem();
        CancelarC = new javax.swing.JMenuItem();
        solicviaticos = new javax.swing.JTabbedPane();
        solicitudviaticos1 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tablasolic = new JTable(){  public boolean isCellEditable(int rowIndex, int colIndex){  return false;  }  };
        jLabel17 = new javax.swing.JLabel();
        txtbusquedasoli = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnAddInventario = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        tablonsolicitud = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablon = new JTable(){  public boolean isCellEditable(int rowIndex, int colIndex){  return false;  }  };
        txtbusquedasoli1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        combotablon = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        informe = new javax.swing.JPanel();
        jlb = new javax.swing.JLabel();
        txtbusquedasoli2 = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablainfo = new javax.swing.JTable();
        txtobvia = new javax.swing.JTextArea();
        txtobveh = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        btnnuevaactividad = new javax.swing.JButton();
        cmbsoliaceptadas = new javax.swing.JComboBox();
        btnconsultarreporte = new javax.swing.JButton();
        btneliminaractividad = new javax.swing.JButton();
        btngenerarreporte = new javax.swing.JButton();
        btnguardar = new javax.swing.JButton();
        btnregresar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itemAnterior = new javax.swing.JMenuItem();
        itemSiguiente = new javax.swing.JMenuItem();
        mi_inventario = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuOpciones = new javax.swing.JMenu();
        menuPermisos = new javax.swing.JMenuItem();
        menuPuestoArea = new javax.swing.JMenuItem();
        MenuSolicitud = new javax.swing.JMenuItem();

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones :", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI", 0, 12))); // NOI18N

        btnAddInventario2.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnAddInventario2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/agregar.png"))); // NOI18N
        btnAddInventario2.setText("Nueva solicitud");
        btnAddInventario2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddInventario2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInventario2ActionPerformed(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IEE.png"))); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(btnAddInventario2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnAddInventario2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(339, Short.MAX_VALUE))
        );

        Impri_Sol.setText("Imprimir solicitud");
        Impri_Sol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Impri_SolActionPerformed(evt);
            }
        });
        MenuSolicitudViaticos.add(Impri_Sol);

        ConsultarP.setText("Consultar");
        ConsultarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarPActionPerformed(evt);
            }
        });
        MenuTablonP.add(ConsultarP);

        AceptarP.setText("Aceptar");
        AceptarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarPActionPerformed(evt);
            }
        });
        MenuTablonP.add(AceptarP);

        CancelarP.setText("Cancelar");
        MenuTablonP.add(CancelarP);

        ConsultarA.setText("Consultar");
        ConsultarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarAActionPerformed(evt);
            }
        });
        MenuTablonA.add(ConsultarA);

        OficioComision.setText("Oficio de comisi√≥n");
        OficioComision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OficioComisionActionPerformed(evt);
            }
        });
        MenuTablonA.add(OficioComision);

        OficioViatico.setText("Oficio de viatico");
        OficioViatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OficioViaticoActionPerformed(evt);
            }
        });
        MenuTablonA.add(OficioViatico);

        AsignarMonto.setText("Asignar monto");
        AsignarMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsignarMontoActionPerformed(evt);
            }
        });
        MenuTablonA.add(AsignarMonto);

        CancelarA.setText("Cancelar");
        MenuTablonA.add(CancelarA);

        ConsultarC.setText("Consultar");
        ConsultarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarCActionPerformed(evt);
            }
        });
        MenuTablonC.add(ConsultarC);

        AceptarC.setText("Aceptar");
        AceptarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarCActionPerformed(evt);
            }
        });
        MenuTablonC.add(AceptarC);

        CancelarC.setText("Cancelar");
        CancelarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarCActionPerformed(evt);
            }
        });
        MenuTablonC.add(CancelarC);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        solicviaticos.setBackground(new java.awt.Color(255, 204, 204));
        solicviaticos.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        solicitudviaticos1.setLayout(null);

        tablasolic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Puesto", "Fecha_salida", "Fecha_llegada", "Lugar"
            }
        ));
        tablasolic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablasolicMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablasolicMouseReleased(evt);
            }
        });
        jScrollPane11.setViewportView(tablasolic);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 1030, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        solicitudviaticos1.add(jPanel16);
        jPanel16.setBounds(20, 170, 1050, 410);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Busqueda:");
        solicitudviaticos1.add(jLabel17);
        jLabel17.setBounds(40, 120, 100, 22);

        txtbusquedasoli.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtbusquedasoli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbusquedasoliKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbusquedasoliKeyReleased(evt);
            }
        });
        solicitudviaticos1.add(txtbusquedasoli);
        txtbusquedasoli.setBounds(130, 120, 290, 30);
        solicitudviaticos1.add(jLabel18);
        jLabel18.setBounds(10, 10, 1350, 80);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones :", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI", 0, 12))); // NOI18N

        btnAddInventario.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnAddInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/agregar.png"))); // NOI18N
        btnAddInventario.setText("A√±adir");
        btnAddInventario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInventarioActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IEE.png"))); // NOI18N

        jButton2.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jButton2.setText("Actualizar Director General");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddInventario, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(btnAddInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        solicitudviaticos1.add(jPanel1);
        jPanel1.setBounds(1110, 110, 200, 540);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.png"))); // NOI18N
        solicitudviaticos1.add(jLabel19);
        jLabel19.setBounds(0, 0, 1367, 769);

        solicviaticos.addTab("Solicitud de Viaticos", new javax.swing.ImageIcon(getClass().getResource("/Iconos/solicitud.png")), solicitudviaticos1); // NOI18N

        tablonsolicitud.setLayout(null);

        tablon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Puesto", "Fecha_salida", "Fecha_llegada", "Lugar"
            }
        ));
        tablon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablonMouseReleased(evt);
            }
        });
        jScrollPane10.setViewportView(tablon);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE))
        );

        tablonsolicitud.add(jPanel19);
        jPanel19.setBounds(20, 180, 1320, 530);

        txtbusquedasoli1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtbusquedasoli1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbusquedasoli1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbusquedasoli1KeyReleased(evt);
            }
        });
        tablonsolicitud.add(txtbusquedasoli1);
        txtbusquedasoli1.setBounds(130, 120, 290, 30);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("Busqueda:");
        tablonsolicitud.add(jLabel21);
        jLabel21.setBounds(40, 120, 100, 22);
        tablonsolicitud.add(jLabel22);
        jLabel22.setBounds(10, 10, 1350, 80);

        combotablon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combotablon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pendientes", "Aceptadas", "Canceladas" }));
        combotablon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combotablonItemStateChanged(evt);
            }
        });
        combotablon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combotablonActionPerformed(evt);
            }
        });
        tablonsolicitud.add(combotablon);
        combotablon.setBounds(460, 120, 110, 30);

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.png"))); // NOI18N
        tablonsolicitud.add(jLabel23);
        jLabel23.setBounds(0, 0, 1367, 769);

        solicviaticos.addTab("Tablon de Solicitudes", new javax.swing.ImageIcon(getClass().getResource("/Iconos/solicitud.png")), tablonsolicitud); // NOI18N

        informe.setLayout(null);

        jlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlb.setText("Busqueda:");
        informe.add(jlb);
        jlb.setBounds(40, 120, 100, 22);

        txtbusquedasoli2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtbusquedasoli2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbusquedasoli2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbusquedasoli2KeyReleased(evt);
            }
        });
        informe.add(txtbusquedasoli2);
        txtbusquedasoli2.setBounds(130, 120, 290, 30);

        jPanel21.setLayout(null);

        tablainfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablainfo);

        jPanel21.add(jScrollPane1);
        jScrollPane1.setBounds(42, 11, 400, 370);

        txtobvia.setColumns(20);
        txtobvia.setRows(5);
        jPanel21.add(txtobvia);
        txtobvia.setBounds(470, 60, 508, 118);

        txtobveh.setColumns(20);
        txtobveh.setRows(5);
        jPanel21.add(txtobveh);
        txtobveh.setBounds(469, 253, 508, 128);

        jLabel1.setText("Observaciones Viaticos");
        jPanel21.add(jLabel1);
        jLabel1.setBounds(660, 30, 110, 14);

        jLabel2.setText("Observaciones Veh√≠culo");
        jPanel21.add(jLabel2);
        jLabel2.setBounds(650, 210, 113, 14);

        informe.add(jPanel21);
        jPanel21.setBounds(20, 180, 1020, 410);

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones :", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI", 0, 12))); // NOI18N
        jPanel22.setLayout(null);

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IEE.png"))); // NOI18N
        jPanel22.add(jLabel26);
        jLabel26.setBounds(16, 29, 193, 83);

        btnnuevaactividad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/agregar.png"))); // NOI18N
        btnnuevaactividad.setText("Nueva Actividad");
        btnnuevaactividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnuevaactividadActionPerformed(evt);
            }
        });
        jPanel22.add(btnnuevaactividad);
        btnnuevaactividad.setBounds(40, 110, 170, 40);

        cmbsoliaceptadas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Solicitudes Aceptadas", "Solicitudes Finalizadas" }));
        cmbsoliaceptadas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbsoliaceptadasItemStateChanged(evt);
            }
        });
        jPanel22.add(cmbsoliaceptadas);
        cmbsoliaceptadas.setBounds(30, 110, 180, 40);

        btnconsultarreporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/consultar.png"))); // NOI18N
        btnconsultarreporte.setText("Consultar Reporte");
        btnconsultarreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultarreporteActionPerformed(evt);
            }
        });
        jPanel22.add(btnconsultarreporte);
        btnconsultarreporte.setBounds(30, 170, 190, 40);

        btneliminaractividad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/quitar.png"))); // NOI18N
        btneliminaractividad.setText("Eliminar Actividad");
        btneliminaractividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminaractividadActionPerformed(evt);
            }
        });
        jPanel22.add(btneliminaractividad);
        btneliminaractividad.setBounds(30, 170, 190, 40);

        btngenerarreporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/oficio.png"))); // NOI18N
        btngenerarreporte.setText("Generar reporte");
        btngenerarreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngenerarreporteActionPerformed(evt);
            }
        });
        jPanel22.add(btngenerarreporte);
        btngenerarreporte.setBounds(30, 170, 190, 40);

        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/guardarsol.png"))); // NOI18N
        btnguardar.setText("Guardar");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });
        jPanel22.add(btnguardar);
        btnguardar.setBounds(30, 230, 190, 40);

        informe.add(jPanel22);
        jPanel22.setBounds(1100, 130, 240, 540);

        btnregresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/atras.png"))); // NOI18N
        btnregresar.setText("Regresar");
        btnregresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregresarActionPerformed(evt);
            }
        });
        informe.add(btnregresar);
        btnregresar.setBounds(867, 130, 170, 40);

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.png"))); // NOI18N
        informe.add(jLabel24);
        jLabel24.setBounds(0, 0, 1367, 769);

        solicviaticos.addTab("Informe", new javax.swing.ImageIcon(getClass().getResource("/Iconos/solicitud.png")), informe); // NOI18N

        jMenu1.setText("Archivo");

        itemAnterior.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        itemAnterior.setText("Anterior");
        itemAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAnteriorActionPerformed(evt);
            }
        });
        jMenu1.add(itemAnterior);

        itemSiguiente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_RIGHT, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        itemSiguiente.setText("Siguiente");
        itemSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSiguienteActionPerformed(evt);
            }
        });
        jMenu1.add(itemSiguiente);

        mi_inventario.setText("Inventario");
        mi_inventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_inventarioActionPerformed(evt);
            }
        });
        jMenu1.add(mi_inventario);
        jMenu1.add(jSeparator1);

        itemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        jMenu1.add(itemSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        menuOpciones.setText("Permisos");

        menuPermisos.setText("Permisos puestos");
        menuPermisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPermisosActionPerformed(evt);
            }
        });
        menuOpciones.add(menuPermisos);

        menuPuestoArea.setText("Puestos & √Åreas");
        menuPuestoArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPuestoAreaActionPerformed(evt);
            }
        });
        menuOpciones.add(menuPuestoArea);

        MenuSolicitud.setText("Permisos solicitud");
        MenuSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSolicitudActionPerformed(evt);
            }
        });
        menuOpciones.add(MenuSolicitud);

        jMenuBar1.add(menuOpciones);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(solicviaticos, javax.swing.GroupLayout.DEFAULT_SIZE, 1354, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(solicviaticos, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAnteriorActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_itemAnteriorActionPerformed

    private void itemSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSiguienteActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_itemSiguienteActionPerformed

    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        // TODO add your handling code here:
        Object[] botones = {"Confirmar","Cancelar"};
        int opcion = JOptionPane.showOptionDialog(this,"¬øSalir del Sistema?", "Confirmaci√≥n",
            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, botones, botones[0]);

        if(opcion == 0){
            System.exit(0);
        }else if(opcion == 1){
            //Cerrar sesion
        }
    }//GEN-LAST:event_itemSalirActionPerformed

    private void menuPermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPermisosActionPerformed
        // TODO add your handling code here:
        /*if((manager_permisos.alta_permisos(Username) && manager_permisos.baja_permisos(Username)) || manager_permisos.consulta_permisos(Username)){
            if(manager_permisos.alta_permisos(Username) && manager_permisos.baja_permisos(Username)){
                Ventana_permisos_puesto ob = new Ventana_permisos_puesto(this, true);
                ob.setVisible(true);
            }else{
                Ventana_permisos_puesto_consulta ob = new Ventana_permisos_puesto_consulta(this, true);
                ob.setVisible(true);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Usted no tiene acceso a los permisos estaticos de los puestos.");
        }*/
    }//GEN-LAST:event_menuPermisosActionPerformed

    private void menuPuestoAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPuestoAreaActionPerformed
        // TODO add your handling code here:
        /*Ventana_Puestos_Area ob = new Ventana_Puestos_Area(this, true);
        ob.setVisible(true);*/
    }//GEN-LAST:event_menuPuestoAreaActionPerformed

    private void MenuSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSolicitudActionPerformed
        // TODO add your handling code here:
       /* if((manager_permisos.alta_permisos(Username) && manager_permisos.baja_permisos(Username)) || manager_permisos.consulta_permisos(Username)){
            if(manager_permisos.alta_permisos(Username) && manager_permisos.baja_permisos(Username)){
                Ventana_permisosSolicitud ob = new Ventana_permisosSolicitud(this, true);
                ob.setVisible(true);
            }else{
                Ventana_permisosSolicitud_consulta ob = new Ventana_permisosSolicitud_consulta(this, true);
                ob.setVisible(true);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Usted no tiene acceso a los permisos de las solicitudes.");
        }*/
    }//GEN-LAST:event_MenuSolicitudActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
                
    }//GEN-LAST:event_formWindowActivated

    private void btnAddInventario2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInventario2ActionPerformed
        //addSolicitudViaticos asv = new addSolicitudViaticos(this, true);
        //asv.setVisible(true);
    }//GEN-LAST:event_btnAddInventario2ActionPerformed

    private void txtbusquedasoliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedasoliKeyPressed
        // TODO add your handling code here:
         

    }//GEN-LAST:event_txtbusquedasoliKeyPressed

    private void txtbusquedasoliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedasoliKeyReleased
        // TODO add your handling code here:
        if (i == 1) {
           modelo = new DefaultTableModel() {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
            modelo.addColumn("Folio");
            modelo.addColumn("Monto");
            modelo.addColumn("Fecha de salida");
            modelo.addColumn("Fecha de llegada");
            modelo.addColumn("Lugar");
            this.tablon.setModel(modelo);
            try {
                Statement sentencia = cn.createStatement();
                ResultSet rs = sentencia.executeQuery("SELECT O.Folio, O.Monto, S.Fecha_salida, S.Fecha_llegada,S.Lugar FROM solicitud_viatico S, oficio_comision O WHERE S.Estado = 'A' AND S.idSolicitud = O.Solicitud_idSolicitud AND (O.Folio LIKE '%" + txtbusquedasoli.getText() + "%'"
                        + "OR O.Monto LIKE '%" + txtbusquedasoli.getText() + "%' OR S.Fecha_salida LIKE '%" + txtbusquedasoli.getText() + "%' OR S.Fecha_llegada LIKE '%" + txtbusquedasoli.getText() + "%'"
                        + "OR S.Lugar LIKE '%" + txtbusquedasoli.getText() + "%') ");

                String solicitud[] = new String[5];
                while (rs.next()) {
                    solicitud[0] = rs.getString("Folio");
                    solicitud[1] = rs.getString("Monto");
                    solicitud[2] = rs.getString("Fecha_salida");
                    solicitud[3] = rs.getString("Fecha_llegada");
                    solicitud[4] = rs.getString("Lugar");
                    modelo.addRow(solicitud);
                }

            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

            } 
        }
        if (i == 2) {
           modelo = new DefaultTableModel() {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
            modelo.addColumn("ID");
            modelo.addColumn("Nombre");
            modelo.addColumn("Puesto");
            modelo.addColumn("Fecha de salida");
            modelo.addColumn("Fecha de llegada");
            modelo.addColumn("Lugar");
            this.tablon.setModel(modelo);
            try {
                Statement sentencia = cn.createStatement();

                ResultSet rs = sentencia.executeQuery("SELECT idSolicitud, Nombre, Puesto, Fecha_salida, Fecha_llegada,Lugar FROM solicitud_viatico WHERE Estado = 'C' AND (idSolicitud LIKE '%" + txtbusquedasoli.getText() + "%'"
                        + "OR Nombre LIKE '%" + txtbusquedasoli.getText() + "%' OR Puesto LIKE '%" + txtbusquedasoli.getText() + "%' OR Fecha_salida LIKE '%" + txtbusquedasoli.getText() + "%' OR Fecha_llegada LIKE '%" + txtbusquedasoli.getText() + "%'"
                        + "OR Lugar LIKE '%" + txtbusquedasoli.getText() + "%') ");

                String solicitud[] = new String[6];
                while (rs.next()) {
                    solicitud[0] = rs.getString("idSolicitud");
                    solicitud[1] = rs.getString("Nombre");
                    solicitud[2] = rs.getString("Puesto");
                    solicitud[3] = rs.getString("Fecha_salida");
                    solicitud[4] = rs.getString("Fecha_llegada");
                    solicitud[5] = rs.getString("Lugar");
                    modelo.addRow(solicitud);
                }

            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

            }
        }
        if (i == 0) {
            modelo = new DefaultTableModel() {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
            modelo.addColumn("ID");
            modelo.addColumn("Nombre");
            modelo.addColumn("Puesto");
            modelo.addColumn("Fecha de salida");
            modelo.addColumn("Fecha de llegada");
            modelo.addColumn("Lugar");
            this.tablon.setModel(modelo);
            try {
       

                Statement sentencia = cn.createStatement();

                ResultSet rs = sentencia.executeQuery("SELECT idSolicitud, Nombre, Puesto, Fecha_salida, Fecha_llegada,Lugar FROM solicitud_viatico WHERE Estado = 'P' AND (idSolicitud LIKE '%" + txtbusquedasoli.getText() + "%'"
                        + "OR Nombre LIKE '%" + txtbusquedasoli.getText() + "%' OR Puesto LIKE '%" + txtbusquedasoli.getText() + "%' OR Fecha_salida LIKE '%" + txtbusquedasoli.getText() + "%' OR Fecha_llegada LIKE '%" + txtbusquedasoli.getText() + "%'"
                        + "OR Lugar LIKE '%" + txtbusquedasoli.getText() + "%') ");

                String solicitud[] = new String[6];
                while (rs.next()) {
                    solicitud[0] = rs.getString("idSolicitud");
                    solicitud[1] = rs.getString("Nombre");
                    solicitud[2] = rs.getString("Puesto");
                    solicitud[3] = rs.getString("Fecha_salida");
                    solicitud[4] = rs.getString("Fecha_llegada");
                    solicitud[5] = rs.getString("Lugar");
                    modelo.addRow(solicitud);
                }

            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

            }
        }
    }//GEN-LAST:event_txtbusquedasoliKeyReleased

    private void btnAddInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInventarioActionPerformed
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            // If Nimbus is not available, you can set the GUI to another look and feel.
        }
        addSolicitudViaticos asv = new addSolicitudViaticos(this, true);
        asv.setVisible(true);
    }//GEN-LAST:event_btnAddInventarioActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         // TODO add your handling code here:
         txtobvia.enable(false);
        txtobveh.enable(false);
        btnregresar.setVisible(false);
        btnguardar.setVisible(false);
        btnconsultarreporte.setVisible(false);
        btnnuevaactividad.setVisible(false);
        btneliminaractividad.setVisible(false);
        i = 0;
        c = 0;
        Solicitud("SELECT O.Folio, S.Nombre FROM solicitud_viatico S, oficio_comision O WHERE S.Estado = 'A' AND S.Reporte = '0' AND S.idSolicitud = O.Solicitud_idSolicitud AND O.Monto != 0");
        tablasolic.setModel(manager_soviaticos.getTasol());
        tablon.setModel(manager_soviaticos.SolicitudP());
        
    }//GEN-LAST:event_formWindowOpened

    private void txtbusquedasoli1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedasoli1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbusquedasoli1KeyPressed

    private void txtbusquedasoli1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedasoli1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbusquedasoli1KeyReleased

    private void combotablonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combotablonItemStateChanged
        // TODO add your handling code here:
        i = combotablon.getSelectedIndex();
        switch (i) {
            case 0: {
                tablon.setModel(manager_soviaticos.SolicitudP());
                break;
            }
            case 1: {
                tablon.setModel(manager_soviaticos.SolicitudA());
                break;
            }
            case 2: {
                tablon.setModel(manager_soviaticos.SolicitudC());
                break;
            }
        }
    }//GEN-LAST:event_combotablonItemStateChanged

    private void txtbusquedasoli2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedasoli2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbusquedasoli2KeyPressed

    private void txtbusquedasoli2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedasoli2KeyReleased
        // TODO add your handling code here:
        if (i == 1) {
            modelo = new DefaultTableModel() {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
            modelo.addColumn("ID Informe");
            modelo.addColumn("Folio");
            modelo.addColumn("Nombre");
            this.tablainfo.setModel(modelo);
            try {
                Statement sentencia = cn.createStatement();
                ResultSet rs = sentencia.executeQuery("SELECT I.Id_Informe, O.Folio, S.Nombre FROM solicitud_viatico S, oficio_comision O, informe I WHERE S.Estado = 'A' AND S.Reporte = '1' AND S.idSolicitud = O.Solicitud_idSolicitud AND I.Solicitud_idSolicitud = S.idSolicitud AND (I.Id_Informe LIKE '%" + txtbusquedasoli2.getText()
                    + "%' OR O.Folio LIKE '%" + txtbusquedasoli2.getText() + "%' OR S.Nombre LIKE '%" + txtbusquedasoli2.getText() + "%') ");

                String solicitud[] = new String[3];
                while (rs.next()) {
                    solicitud[0] = rs.getString("Id_Informe");
                    solicitud[1] = rs.getString("Folio");
                    solicitud[2] = rs.getString("Nombre");
                    modelo.addRow(solicitud);

                }

            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

            }
        }
        if (i == 0) {
            modelo = new DefaultTableModel() {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
            modelo.addColumn("Folio");
            modelo.addColumn("Nombre");
            this.tablainfo.setModel(modelo);
            //this.tablainfo.setModel(modelo);
            try {
                Statement sentencia = cn.createStatement();

                ResultSet rs = sentencia.executeQuery("SELECT O.Folio, S.Nombre FROM solicitud_viatico S, oficio_comision O WHERE S.Estado = 'A' AND S.Reporte = '0' AND S.idSolicitud = O.Solicitud_idSolicitud  AND (O.Folio LIKE '%" + txtbusquedasoli2.getText() + "%'"
                    + "OR S.Nombre LIKE '%" + txtbusquedasoli2.getText() + "%') ");

                String solicitud[] = new String[2];
                while (rs.next()) {
                    solicitud[0] = rs.getString("Folio");
                    solicitud[1] = rs.getString("Nombre");
                    modelo.addRow(solicitud);
                }

            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

            }
        }
    }//GEN-LAST:event_txtbusquedasoli2KeyReleased

    private void btnnuevaactividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnuevaactividadActionPerformed
        // TODO add your handling code here:
        modelo.addRow(new Object[]{"", ""});
    }//GEN-LAST:event_btnnuevaactividadActionPerformed

    private void cmbsoliaceptadasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbsoliaceptadasItemStateChanged
        // TODO add your handling code here:
        switch (cmbsoliaceptadas.getSelectedIndex()) {
            case 0: {
                Solicitud("SELECT O.Folio, S.Nombre FROM solicitud_viatico S, oficio_comision O WHERE S.Estado = 'A' AND S.Reporte = '0' AND S.idSolicitud = O.Solicitud_idSolicitud AND O.Monto != 0");
                btngenerarreporte.setVisible(true);
                btnconsultarreporte.setVisible(false);
                i = 0;
                break;
            }
            case 1: {
                SolicitudR("SELECT I.Id_Informe, O.FOLIO, S.Nombre FROM solicitud_viatico S, oficio_comision O, informe I WHERE S.Estado = 'A' AND S.Reporte = '1' AND S.idSolicitud = O.Solicitud_idSolicitud AND I.Solicitud_idSolicitud = S.idSolicitud AND O.Monto != 0");
                btnconsultarreporte.setVisible(true);
                btngenerarreporte.setVisible(false);
                i = 1;
                break;
            }

        }
    }//GEN-LAST:event_cmbsoliaceptadasItemStateChanged

    private void btnconsultarreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultarreporteActionPerformed
        // TODO add your handling code here:
        try {
            int k = tablainfo.getSelectedRow();
            String idInforme = "";
            if (k >= 0) {
                idInforme = tablainfo.getValueAt(k, 0).toString();
                pdf.reporte(idInforme);
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar Informe");
            }
        } catch (DocumentException ex) {
            Logger.getLogger(PrincipalS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnconsultarreporteActionPerformed

    private void btneliminaractividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminaractividadActionPerformed
        // TODO add your handling code here:
        modelo.removeRow(modelo.getRowCount() - 1);
    }//GEN-LAST:event_btneliminaractividadActionPerformed

    private void btngenerarreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngenerarreporteActionPerformed
        // TODO add your handling code here:
        int k = tablainfo.getSelectedRow();
        folio = 0;
        if (k >= 0) {
            folio = Integer.parseInt(tablainfo.getValueAt(k, 0).toString());
            int filas = tablainfo.getRowCount();
            if (filas != 0) {
                for (int j = 0; filas > j; j++) {
                    modelo.removeRow(0);

                }

            }
            modelo = new DefaultTableModel();
            modelo.addColumn("Descripci√≥n");
            modelo.addColumn("Precio");
            this.tablainfo.setModel(modelo);
            txtobvia.enable(true);
            try {
                Statement sentencia = cn.createStatement();
                String vehiculo = "";
                ResultSet rs = sentencia.executeQuery("SELECT S.Vehiculo FROM Solicitud_viatico S, Oficio_Comision O WHERE S.Estado = 'A' AND S.Reporte = '0' AND S.idSolicitud = O.Solicitud_idSolicitud AND O.Folio = " + folio);
                while (rs.next()) {
                    vehiculo = rs.getString("Vehiculo");
                }
                if (vehiculo != "") {
                    txtobveh.enable(true);
                    c = 1;
                } else {
                    txtobveh.enable(false);
                    c = 0;
                }
                btnregresar.setVisible(true);
                btnguardar.setVisible(true);
                btnnuevaactividad.setVisible(true);
                btneliminaractividad.setVisible(true);
                btngenerarreporte.setVisible(false);
                cmbsoliaceptadas.setVisible(false);
                jlb.setVisible(false);
                txtbusquedasoli2.setVisible(false);
            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

            }

        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
        }
    }//GEN-LAST:event_btngenerarreporteActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        try {
            int s = JOptionPane.showConfirmDialog(null, "¬øEsta seguro?", "Alerta!", JOptionPane.YES_NO_OPTION);
            if (s == JOptionPane.YES_OPTION) {
                String id = "";
                Statement sentencia = cn.createStatement();
                ResultSet rs = sentencia.executeQuery("SELECT Solicitud_idSolicitud FROM Oficio_Comision WHERE Folio = " + folio);
                while (rs.next()) {
                    id = rs.getString("Solicitud_idSolicitud");
                }
                if (c == 1) {
                    sentencia.execute("INSERT INTO informe (Observaciones,Observaciones_Vehiculo,Solicitud_idSolicitud) VALUES('" + txtobvia.getText() + "','" + txtobveh.getText() + "'," + id + ")");
                } else {
                    sentencia.execute("INSERT INTO informe (Observaciones,Observaciones_Vehiculo,Solicitud_idSolicitud) VALUES('" + txtobvia.getText() + "',' '," + id + ")");
                }
                sentencia.executeUpdate("UPDATE solicitud_viatico SET Reporte = '1' WHERE (idSolicitud = " + id + ")");
                String idInforme = "";
                ResultSet rs2 = sentencia.executeQuery("SELECT MAX(id_informe) AS id_informe FROM informe");
                while (rs2.next()) {
                    idInforme = rs2.getString("id_informe");
                }
                String idGastos = "";
                int filas = tablainfo.getRowCount();
                if (filas != 0) {
                    for (int j = 0; filas > j; j++) {
                        sentencia.execute("INSERT INTO gastos (Descripcion,Precio) VALUES('" + tablainfo.getValueAt(j, 0).toString() + "','" + tablainfo.getValueAt(j, 1).toString() + "')");
                        ResultSet rs3 = sentencia.executeQuery("SELECT MAX(id_gastos) AS id_gastos FROM gastos");
                        while (rs3.next()) {
                            idGastos = rs3.getString("id_gastos");
                        }
                        sentencia.execute("INSERT INTO informe_gastos VALUES(" + idInforme + "," + idGastos + ")");
                    }
                }
                javax.swing.JOptionPane.showMessageDialog(null, "Reporte Generado");
                if (c == 1) {
                    txtobvia.enable(false);
                    txtobveh.enable(false);
                    tablainfo.enable(false);
                } else {
                    txtobvia.enable(false);
                    tablainfo.enable(false);
                }
            } else {
            }
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "Error al generar reporte");

        } 
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnregresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregresarActionPerformed
        // TODO add your handling code here:
        int s = JOptionPane.showConfirmDialog(null, "¬øEsta seguro?", "Alerta!", JOptionPane.YES_NO_OPTION);
        if (s == JOptionPane.YES_OPTION) {
            txtobvia.setText("");
            txtobveh.setText("");
            txtobvia.enable(false);
            txtobveh.enable(false);
            btnregresar.setVisible(false);
            btnguardar.setVisible(false);
            btnnuevaactividad.setVisible(false);
            btneliminaractividad.setVisible(false);
            btngenerarreporte.setVisible(true);
            cmbsoliaceptadas.setVisible(true);
            tablainfo.enable(true);
            jlb.setVisible(true);
            txtbusquedasoli2.setVisible(true);
            Solicitud("SELECT O.Folio, S.Nombre FROM solicitud_viatico S, oficio_comision O WHERE S.Estado = 'A' AND S.Reporte = '0' AND S.idSolicitud = O.Solicitud_idSolicitud");
        } else {
        }
    }//GEN-LAST:event_btnregresarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String nuevo=JOptionPane.showInputDialog("Inserte el nombre del nuevo director general");
        cbd.ejecutar("update Director_General set Nombre='"+nuevo+"'");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void mi_inventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_inventarioActionPerformed
        try {
            Principal a= new Principal();
            a.setVisible(true);
            this.dispose();
        } catch (ClassNotFoundException | SQLException | IOException ex) {
            Logger.getLogger(PrincipalS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mi_inventarioActionPerformed

    private void combotablonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combotablonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combotablonActionPerformed

    private void tablasolicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablasolicMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tablasolicMouseClicked

    private void tablasolicMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablasolicMouseReleased
        // TODO add your handling code here:
        if(SwingUtilities.isRightMouseButton(evt)){
                int r = tablasolic.rowAtPoint(evt.getPoint());
                if (r >= 0 && r < tablasolic.getRowCount())
                tablasolic.setRowSelectionInterval(r, r);
                MenuSolicitudViaticos.show(evt.getComponent(), evt.getX(), evt.getY());//Mostramos el popMenu en la posici√≥n donde esta el cursor
        }//clic derecho
    }//GEN-LAST:event_tablasolicMouseReleased

    private void Impri_SolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Impri_SolActionPerformed
        // TODO add your handling code here:
        int fila = tablasolic.getSelectedRow();;
        limpiar=false;
        String id = null;
        try{
            
            tablasolic.clearSelection();
            CrearPDF pdf=new CrearPDF();
            if(fila>=0){
                id=tablasolic.getValueAt(fila, 0).toString();
                pdf.generarPDFSolicitud(id);
            }
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_Impri_SolActionPerformed

    private void ConsultarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarPActionPerformed
        // TODO add your handling code here:
        if (c == 0) {
            Consultar();
            c = 1;
        } else {
            s.setVisible(false);
            Consultar();
            c = 0;
        }
        s.setVisible(true);
    }//GEN-LAST:event_ConsultarPActionPerformed

    private void tablonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablonMouseReleased
        // TODO add your handling code here:
        
        int fila = combotablon.getSelectedIndex();
        switch (fila) {
            case 0: {
                if(SwingUtilities.isRightMouseButton(evt)){
                    int r = tablon.rowAtPoint(evt.getPoint());
                    if (r >= 0 && r < tablon.getRowCount())
                    tablon.setRowSelectionInterval(r, r);
                    MenuTablonP.show(evt.getComponent(), evt.getX(), evt.getY());//Mostramos el popMenu en la posici√≥n donde esta el cursor
                }//clic derecho                
                break;
            }
            case 1: {
                if(SwingUtilities.isRightMouseButton(evt)){
                    int r = tablon.rowAtPoint(evt.getPoint());
                    if (r >= 0 && r < tablon.getRowCount())
                    tablon.setRowSelectionInterval(r, r);
                    MenuTablonA.show(evt.getComponent(), evt.getX(), evt.getY());//Mostramos el popMenu en la posici√≥n donde esta el cursor
                }//clic derecho
                break;
            }
            case 2: {
                if(SwingUtilities.isRightMouseButton(evt)){
                    int r = tablon.rowAtPoint(evt.getPoint());
                    if (r >= 0 && r < tablon.getRowCount())
                    tablon.setRowSelectionInterval(r, r);
                    MenuTablonC.show(evt.getComponent(), evt.getX(), evt.getY());//Mostramos el popMenu en la posici√≥n donde esta el cursor
                }//clic derecho
                break;
            }
        }//Switch
        
    }//GEN-LAST:event_tablonMouseReleased

    private void ConsultarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarAActionPerformed
        // TODO add your handling code here:
        if (c == 0) {
            Consultar();
            c = 1;
        } else {
            s.setVisible(false);
            Consultar();
            c = 0;
        }
        s.setVisible(true);
    }//GEN-LAST:event_ConsultarAActionPerformed

    private void ConsultarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarCActionPerformed
        // TODO add your handling code here:
        if (c == 0) {
            Consultar();
            c = 1;
        } else {
            s.setVisible(false);
            Consultar();
            c = 0;
        }
        s.setVisible(true);
    }//GEN-LAST:event_ConsultarCActionPerformed

    private void OficioComisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OficioComisionActionPerformed
        // TODO add your handling code here:
        int i = tablon.getSelectedRow();
        if (i >= 0) {
            String folio = tablon.getValueAt(i, 0).toString();
            try {
                pdf.oficio_comision(folio);
            } catch (DocumentException ex) {
                Logger.getLogger(PrincipalS.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
        }
    }//GEN-LAST:event_OficioComisionActionPerformed

    private void OficioViaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OficioViaticoActionPerformed
        // TODO add your handling code here:
        int i = tablon.getSelectedRow();
        if (i >= 0) {
            String folio = tablon.getValueAt(i, 0).toString();
            try {
                pdf.pdfFolio(folio);
            } catch (DocumentException ex) {
                Logger.getLogger(PrincipalS.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
        }
    }//GEN-LAST:event_OficioViaticoActionPerformed

    private void AsignarMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsignarMontoActionPerformed
        // TODO add your handling code here:
        int k = tablon.getSelectedRow();
        if (k >= 0) {
            String folio = tablon.getValueAt(k, 0).toString();
            try {
              
                Statement sentencia = cn.createStatement();
                String valor = javax.swing.JOptionPane.showInputDialog("Asignar monto");

                if (valor == null) {

                } else {
                    float monto = Float.parseFloat(valor);
                    sentencia.executeUpdate("UPDATE oficio_comision SET Monto = " + monto + "WHERE(Folio =" + folio + ")");
                    javax.swing.JOptionPane.showMessageDialog(null, "Monto Asignado");
                }
            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

            } catch (NumberFormatException exp) {
                javax.swing.JOptionPane.showMessageDialog(null, "Ingresar solo n√∫meros");
            }//fin del catch

        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
        }
        int filas = tablon.getRowCount();
        if (filas != 0) {
            for (int j = 0; filas > j; j++) {
                modelo.removeRow(0);
            }
        }
        tablon.setModel(manager_soviaticos.SolicitudA());
    }//GEN-LAST:event_AsignarMontoActionPerformed

    private void AceptarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarPActionPerformed
        // TODO add your handling code here:
        int k = tablon.getSelectedRow();
        if (k >= 0) {
            int id = Integer.parseInt(tablon.getValueAt(k, 0).toString());
            Calendar calendar = Calendar.getInstance();
            try {
                
                String total = "";
                Statement sentencia = cn.createStatement();
                ResultSet rs0 = sentencia.executeQuery("SELECT COUNT(*) as Folio FROM oficio_comision");
                while (rs0.next()) {
                    total = rs0.getString("Folio");
                }
                int total1 = Integer.parseInt(total);
                int folio = 0;
                String valor = "";
                if (total1 != 0) {
                    ResultSet rs = sentencia.executeQuery("SELECT MAX(Folio) AS Folio FROM oficio_comision");
                    while (rs.next()) {
                        valor = rs.getString("Folio");
                    }
                    int an = Integer.parseInt(valor.substring(0, 4));
                    if (an == calendar.get(Calendar.YEAR)) {
                        valor = valor.substring(4);
                        folio = Integer.parseInt(valor) + 1;
                        valor = an + "" + folio;
                        folio = Integer.parseInt(valor);
                    } else {
                        valor = calendar.get(Calendar.YEAR) + "1";
                        folio = Integer.parseInt(valor);
                    }
                } else {
                    valor = calendar.get(Calendar.YEAR) + "1";
                    folio = Integer.parseInt(valor);
                }
                sentencia.execute("INSERT INTO oficio_comision VALUES(" + folio + "," + id + "," + 0.00 + ")");
                sentencia.executeUpdate("UPDATE solicitud_viatico SET Estado = 'A' WHERE (idSolicitud = '" + id + "')");
                javax.swing.JOptionPane.showMessageDialog(null, "Solicitud aceptada");

            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta o folio ya asignado");

            }/*catch (ClassNotFoundException e) {
                e.printStackTrace();
            }*/ //fin del catch

        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
        }
        int filas = tablon.getRowCount();
        if (filas != 0) {
            for (int j = 0; filas > j; j++) {
                modelo.removeRow(0);
            }

        }
        if (i == 0) {
            tablon.setModel(manager_soviaticos.SolicitudP());
        } else {
            tablon.setModel(manager_soviaticos.SolicitudC());
        }
    }//GEN-LAST:event_AceptarPActionPerformed

    private void AceptarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarCActionPerformed
        // TODO add your handling code here:
        int k = tablon.getSelectedRow();
        if (k >= 0) {
            int id = Integer.parseInt(tablon.getValueAt(k, 0).toString());
            Calendar calendar = Calendar.getInstance();
            try {
                
                String total = "";
                Statement sentencia = cn.createStatement();
                ResultSet rs0 = sentencia.executeQuery("SELECT COUNT(*) as Folio FROM oficio_comision");
                while (rs0.next()) {
                    total = rs0.getString("Folio");
                }
                int total1 = Integer.parseInt(total);
                int folio = 0;
                String valor = "";
                if (total1 != 0) {
                    ResultSet rs = sentencia.executeQuery("SELECT MAX(Folio) AS Folio FROM oficio_comision");
                    while (rs.next()) {
                        valor = rs.getString("Folio");
                    }
                    int an = Integer.parseInt(valor.substring(0, 4));
                    if (an == calendar.get(Calendar.YEAR)) {
                        valor = valor.substring(4);
                        folio = Integer.parseInt(valor) + 1;
                        valor = an + "" + folio;
                        folio = Integer.parseInt(valor);
                    } else {
                        valor = calendar.get(Calendar.YEAR) + "1";
                        folio = Integer.parseInt(valor);
                    }
                } else {
                    valor = calendar.get(Calendar.YEAR) + "1";
                    folio = Integer.parseInt(valor);
                }
                sentencia.execute("INSERT INTO oficio_comision VALUES(" + folio + "," + id + "," + 0.00 + ")");
                sentencia.executeUpdate("UPDATE solicitud_viatico SET Estado = 'A' WHERE (idSolicitud = '" + id + "')");
                javax.swing.JOptionPane.showMessageDialog(null, "Solicitud aceptada");

            } catch (SQLException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta o folio ya asignado");

            }/*catch (ClassNotFoundException e) {
                e.printStackTrace();
            }*/ //fin del catch

        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
        }
        int filas = tablon.getRowCount();
        if (filas != 0) {
            for (int j = 0; filas > j; j++) {
                modelo.removeRow(0);
            }

        }
        if (i == 0) {
            tablon.setModel(manager_soviaticos.SolicitudP());
        } else {
            tablon.setModel(manager_soviaticos.SolicitudC());
        }
    }//GEN-LAST:event_AceptarCActionPerformed

    private void CancelarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CancelarCActionPerformed
    public void Consultar() {
        if (i == 1) {
            int i = tablon.getSelectedRow();
            if (i >= 0) {
                String folio = tablon.getValueAt(i, 0).toString();
                String idSolicitud = "";
                try {
                    Statement sentencia = cn.createStatement();
                    ResultSet rs = sentencia.executeQuery("SELECT Solicitud_idSolicitud FROM oficio_comision WHERE Folio = '" + folio + "'");
                    rs.next();
                    idSolicitud = rs.getString("Solicitud_idSolicitud");
                    
                    s = new visSolicitudViaticos();
                    s.IdUsuario(Integer.parseInt(idSolicitud));
                } catch (SQLException ex) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

                } /*catch (ClassNotFoundException e) {
                    e.printStackTrace();
                }//fin del catch*/
                s.setVisible(true);
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
            }
        } else {
            int k = tablon.getSelectedRow();
            if (k >= 0) {
                int id = Integer.parseInt(tablon.getValueAt(k, 0).toString());
                s = new visSolicitudViaticos();
                s.IdUsuario(id);
                s.setVisible(true);
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Seleccionar solicitud");
            }
        }
        
    }//consultar
    
    public void Solicitud(String s) {
        modelo = new DefaultTableModel() {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        modelo.addColumn("Folio");
        modelo.addColumn("Nombre");
        this.tablainfo.setModel(modelo);
        try {
            Statement sentencia = cn.createStatement();

            ResultSet rs = sentencia.executeQuery(s);

            String solicitud[] = new String[2];
            while (rs.next()) {
                solicitud[0] = rs.getString("Folio");
                solicitud[1] = rs.getString("Nombre");
                modelo.addRow(solicitud);
            }

        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

        } 
    }
    public void SolicitudR(String s) {
        modelo = new DefaultTableModel() {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        modelo.addColumn("ID Informe");
        modelo.addColumn("Folio");
        modelo.addColumn("Nombre");
        this.tablainfo.setModel(modelo);
        try {
            Statement sentencia = cn.createStatement();

            ResultSet rs = sentencia.executeQuery(s);
            String solicitud[] = new String[3];
            while (rs.next()) {
                solicitud[0] = rs.getString("Id_Informe");
                solicitud[1] = rs.getString("Folio");
                solicitud[2] = rs.getString("Nombre");
                modelo.addRow(solicitud);

            }

        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "Error en la consulta");

        } 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AceptarC;
    private javax.swing.JMenuItem AceptarP;
    private javax.swing.JMenuItem AsignarMonto;
    private javax.swing.JMenuItem CancelarA;
    private javax.swing.JMenuItem CancelarC;
    private javax.swing.JMenuItem CancelarP;
    private javax.swing.JMenuItem ConsultarA;
    private javax.swing.JMenuItem ConsultarC;
    private javax.swing.JMenuItem ConsultarP;
    private javax.swing.JMenuItem Impri_Sol;
    private javax.swing.JMenuItem MenuSolicitud;
    private javax.swing.JPopupMenu MenuSolicitudViaticos;
    private javax.swing.JPopupMenu MenuTablonA;
    private javax.swing.JPopupMenu MenuTablonC;
    private javax.swing.JPopupMenu MenuTablonP;
    private javax.swing.JMenuItem OficioComision;
    private javax.swing.JMenuItem OficioViatico;
    private javax.swing.JButton btnAddInventario;
    private javax.swing.JButton btnAddInventario2;
    private javax.swing.JButton btnconsultarreporte;
    private javax.swing.JButton btneliminaractividad;
    private javax.swing.JButton btngenerarreporte;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnnuevaactividad;
    private javax.swing.JButton btnregresar;
    private javax.swing.JComboBox cmbsoliaceptadas;
    private javax.swing.JComboBox combotablon;
    private javax.swing.JPanel informe;
    private javax.swing.JMenuItem itemAnterior;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JMenuItem itemSiguiente;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel jlb;
    private javax.swing.JMenu menuOpciones;
    private javax.swing.JMenuItem menuPermisos;
    private javax.swing.JMenuItem menuPuestoArea;
    private javax.swing.JMenuItem mi_inventario;
    private javax.swing.JPanel solicitudviaticos1;
    public static javax.swing.JTabbedPane solicviaticos;
    private javax.swing.JTable tablainfo;
    public static javax.swing.JTable tablasolic;
    public static javax.swing.JTable tablon;
    private javax.swing.JPanel tablonsolicitud;
    private javax.swing.JTextField txtbusquedasoli;
    private javax.swing.JTextField txtbusquedasoli1;
    private javax.swing.JTextField txtbusquedasoli2;
    private javax.swing.JTextArea txtobveh;
    private javax.swing.JTextArea txtobvia;
    // End of variables declaration//GEN-END:variables
}
